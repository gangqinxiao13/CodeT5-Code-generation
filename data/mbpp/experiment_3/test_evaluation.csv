,text,code,generation,bleu,1-gram bleu,2-gram bleu,3-gram bleu,4-gram bleu,precision,recall,F1,F3
0,Write a function to find the length of the longest sub-sequence such that elements in the subsequences are consecutive integers.,"def find_longest_conseq_subseq(arr, n): 
	ans = 0
	count = 0
	arr.sort() 
	v = [] 
	v.append(arr[0]) 
	for i in range(1, n): 
		if (arr[i] != arr[i - 1]): 
			v.append(arr[i]) 
	for i in range(len(v)): 
		if (i > 0 and v[i] == v[i - 1] + 1): 
			count += 1
		else: 
			count = 1
		ans = max(ans, count) 
	return ans ","def longest_subseq_with_longest_subseq(arr): 
	n = len(arr) 
	longest_subseq = [1]*n 
	for i in range (1, n): 
		for j in range(0, i): 
			if ((arr[i] > arr[j]) and (l == i) or (arr[i] < l[j]): 
				longest_subseq[i] = longest_subseq[j]+1
	for i in range(n):",0.033145447688843,0.2691824548351704,0.0691144140793005,0.0355171294574183,0.0018265952292386,0.8762726783752441,0.8366010785102844,0.855977475643158,0.8404058814048767
1,Write a python function to find the sum of even numbers at even positions.,"def sum_even_and_even_index(arr,n):  
    i = 0
    sum = 0
    for i in range(0,n,2): 
        if (arr[i] % 2 == 0) : 
            sum += arr[i]  
    return sum","def odd_Sum(n): 
    sum = 0
    for i in range(0,n) : 
        if (i % 2 == 0) : 
            sum = sum + i 
    return sum",0.4393709544636924,0.75,0.4782608695652174,0.3636363636363636,0.2857142857142857,0.9517949819564819,0.9122196435928345,0.9315872192382812,0.9160284399986267
2,Write a function to remove even characters in a string.,"def remove_even(str1):
 str2 = ''
 for i in range(1, len(str1) + 1):
    if(i % 2 != 0):
        str2 = str2 + str1[i - 1]
 return str2","import re
def remove_even(str1):
 str2 = ''
 for i in range(1, len(str1) + 1):
    if i % 2 == 0:
        str2 = str2 + str1[i - 1]
 return str2",0.6735211184255079,0.7931034482758621,0.7142857142857143,0.6296296296296297,0.5769230769230769,0.9737055897712708,0.9918661117553711,0.9827019572257996,0.9900196194648743
3,Write a function to calculate the sum of the positive integers of n+(n-2)+(n-4)... (until n-x =< 0).,"def sum_series(n):
  if n < 1:
    return 0
  else:
    return n + sum_series(n - 2)","def sum_positivenum(n): 
	x = [0]*(n + 1) 
	res = 1
	while (n): 
		res *= (n - 1) 
		n = n + 1
	return res
def sum_positivenum(n): 
	x = [0] * (n + 1)
	for i in range(1, n):
		x[i] = 1
		for i in range(1, n):
			res[i",0.0108807189512224,0.1276595744680851,0.0217391304347826,0.0022222222222222,0.0022727272727272,0.7480226159095764,0.8372079133987427,0.7901064157485962,0.8273437023162842
4,Write a python function to count the pairs with xor as an odd number.,"def find_Odd_Pair(A,N) : 
    oddPair = 0
    for i in range(0,N) :  
        for j in range(i+1,N) :  
            if ((A[i] ^ A[j]) % 2 != 0):  
                oddPair+=1  
    return oddPair  ","def find_even_Pair(A,N): 
    evenPair = 0
    for i in range(0,N): 
        for j in range(i+1,N): 
            if ((A[i] ^ A[j]) % 2 == 0): 
                evenPair+=1
    return evenPair; ",0.365210559422655,0.6251019726640885,0.4220637360187196,0.3209079645762165,0.2101183101391893,0.9818640947341919,0.9766318798065186,0.9792410135269165,0.9771525263786316
5,Write a function to remove consecutive duplicates of a given list.,"from itertools import groupby
def consecutive_duplicates(nums):
    return [key for key, group in groupby(nums)] ","def remove_consecutive_duplicates(l):
    return [i for i in l if l[:i] == l[i + 1:]]",0.0202001069126941,0.2857142857142857,0.0076923076923076,0.0083333333333333,0.009090909090909,0.8109144568443298,0.803688645362854,0.8072853684425354,0.8044053316116333
6,Write a function to compute the value of ncr%p.,"def ncr_modp(n, r, p): 
    C = [0 for i in range(r+1)]   
    C[0] = 1
    for i in range(1, n+1): 
        for j in range(min(i, r), 0, -1): 
            C[j] = (C[j] + C[j-1]) % p   
    return C[r] ","def nCr_mod(n, r): 
	if (r > n- r): 
		r = n - r 
	C = [0 for i in range(r + 1)] 
	C[0] = 1 
	for i in range(1, n + 1): 
		for j in range(min(i, r), 0, -1): 
			C[j] = (C[j] + C[j-1]) % p 
	return C[r] ",0.5264846922247504,0.625,0.5531914893617021,0.5,0.4444444444444444,0.9492996335029602,0.9666736125946045,0.9579079151153564,0.9649076461791992
7,Write a function to check whether the given key is present in the dictionary or not.,"def is_key_present(d,x):
  if x in d:
    return True
  else:
     return False","def check_key(dict, key):
  if key in dict:
    return True
  else:
    return False",0.356550620855925,0.6666666666666666,0.3636363636363636,0.3,0.2222222222222222,0.9560984373092651,0.9463353157043457,0.9511918425559998,0.9473025798797607
8,Write a python function to convert the given string to lower case.,"def is_lower(string):
  return (string.lower())","def is_lower(string):
  return (string.lower())",1.0,1.0,1.0,1.0,1.0,0.9999997615814209,0.9999997615814209,0.9999997615814209,0.9999998211860657
9,Write a function to return true if the password is valid.,"import re
def pass_validity(p):
 x = True
 while x:  
    if (len(p)<6 or len(p)>12):
        break
    elif not re.search(""[a-z]"",p):
        break
    elif not re.search(""[0-9]"",p):
        break
    elif not re.search(""[A-Z]"",p):
        break
    elif not re.search(""[$#@]"",p):
        break
    elif re.search(""\s"",p):
        break
    else:
        return True
        x=False
        break

 if x:
    return False","def check_password(password):
  if any(password == password for i in range(1,n)):
    return True
  else:
    return False",0.0083174228847703,0.0771394811700737,0.0354211903331971,0.0012715299093968,0.0013774907351798,0.7459806799888611,0.6967715620994568,0.7205369472503662,0.7013983726501465
10,Write a function to remove all the words with k length in the given string.,"def remove_length(test_str, K):
  temp = test_str.split()
  res = [ele for ele in temp if len(ele) != K]
  res = ' '.join(res)
  return (res) ","def remove_k_words(text, k):
  return (text) 
",0.0017458304040036,0.010929488978917,0.0006830930611823,0.000910790748243,0.0013661861223646,0.8551928400993347,0.7562788724899292,0.8027001619338989,0.7651285529136658
11,Write a function to add the given list to the given tuples.,"def add_lists(test_list, test_tup):
  res = tuple(list(test_tup) + test_list)
  return (res) ","def add_list(test_tup):
  test_tup = list(test_tup)
  test_tup.append(test_str)
  return (test_tup) ",0.0284694693814936,0.2920502936517768,0.0111257254724486,0.01298001305119,0.015576015661428,0.919960618019104,0.9055411219596863,0.912693977355957,0.9069626331329346
12,Write a function to get the sum of a non-negative integer.,"def sum_digits(n):
  if n == 0:
    return 0
  else:
    return n % 10 + sum_digits(int(n / 10))","def number_sum(n):
  sum = 0
  for num in range(1,n):
    sum = sum + num
  return sum",0.0163418392927346,0.2348532657033689,0.0062627537520898,0.0067100933058105,0.0072262543293344,0.8365781307220459,0.8312684893608093,0.8339148163795471,0.8317964673042297
13,Write a function to insert a given string at the beginning of all items in a list.,"def add_string(list,string):
 add_string=[string.format(i) for i in  list]
 return add_string","def insert_string(list,string):
 list = [v for v in list for k in (string, k)]
 return list",0.0173957973756422,0.25,0.0066666666666666,0.0071428571428571,0.0076923076923076,0.9037441611289978,0.9021426439285278,0.9029427170753479,0.9023025035858154
14,Write a function to find the similar elements from the given two tuple lists.,"def similar_elements(test_tup1, test_tup2):
  res = tuple(set(test_tup1) & set(test_tup2))
  return (res) ","def similar_elements(test_list1, test_list2):
  res = set(test_list1) & set(test_list2)
  return (res) ",0.0698534205658009,0.6,0.2222222222222222,0.0125,0.0142857142857142,0.962313175201416,0.9335795044898987,0.9477286338806152,0.9363754391670227
15,Write a function to check for a number at the end of a string.,"import re
def end_num(string):
    text = re.compile(r"".*[0-9]$"")
    if text.match(string):
        return True
    else:
        return False","def check_num(string):
  n = len(string)
  if n > 0:
    return True
  else:
    return False",0.2989950354998136,0.5714285714285714,0.3076923076923076,0.25,0.1818181818181818,0.9033682942390442,0.8163408041000366,0.8576524257659912,0.824281632900238
16,Write a python function to get the position of rightmost set bit.,"import math
def get_First_Set_Bit_Pos(n):
     return math.log2(n&-n)+1","import math 
def get_Right_most_Set_Bit(n): 
    return int(math.log2(n&-n)+1)",0.2171185208108768,0.6666666666666666,0.4,0.25,0.0333333333333333,0.9501930475234985,0.9620499610900879,0.9560847282409668,0.9608508944511414
17,Write a python function to find the maximum length of sublist.,"def Find_Max_Length(lst):  
    maxLength = max(len(x) for x in lst )
    return maxLength ","def Find_Max_Len_Of_List(lst): 
    maxList = max((x) for x in lst) 
    return maxList",0.1013054242349556,0.4980549361539613,0.1826201432564524,0.1014556351424735,0.0114137589535282,0.950512707233429,0.9617675542831421,0.9561070203781128,0.9606301188468933
18,Write a function to zip the two given tuples.,"def zip_tuples(test_tup1, test_tup2):
  res = []
  for i, j in enumerate(test_tup1):
    res.append((j, test_tup2[i % len(test_tup2)])) 
  return (res) ","def zip_list(test_tup1, test_tup2):
  res = tuple(tuple(a + b for a, b in zip(tup1, tup2))
   for tup1, tup2 in zip(test_tup1, test_tup2))
  return (res) ",0.0608059975103827,0.3636363636363636,0.1428571428571428,0.05,0.0052631578947368,0.8874718546867371,0.8975041508674622,0.8924598097801208,0.8964908123016357
19,Write a function to perform the adjacent element concatenation in the given tuples.,"def concatenate_elements(test_tup):
  res = tuple(i + j for i, j in zip(test_tup, test_tup[1:]))
  return (res) ","def adjacent_elements(test_tup):
  res = tuple(ele1 + ele2 for ele1, ele2 in zip(test_tup, test_tup[1:]))
  return (res) ",0.3093458829431371,0.6666666666666666,0.3571428571428572,0.2307692307692307,0.1666666666666666,0.9326637387275696,0.9408511519432068,0.9367395043373108,0.9400259852409363
20,Write a function to find the n-th rectangular number.,"def find_rect_num(n):
  return n*(n + 1) ","def find_rectangular(n): 
	if (n == 0): 
		return 1
	if (n == 1): 
		return 1
	return find_rectangular(n - 1) + find_rectangular(n - 2)",0.0122859460747056,0.1818181818181818,0.0047619047619047,0.005,0.0052631578947368,0.8367795348167419,0.8758406639099121,0.8558646440505981,0.8717711567878723
21,Write a function to count those characters which have vowels as their neighbors in the given string.,"def count_vowels(test_str):
  res = 0
  vow_list = ['a', 'e', 'i', 'o', 'u']
  for idx in range(1, len(test_str) - 1):
    if test_str[idx] not in vow_list and (test_str[idx - 1] in vow_list or test_str[idx + 1] in vow_list):
      res += 1
  if test_str[0] not in vow_list and test_str[1] in vow_list:
    res += 1
  if test_str[-1] not in vow_list and test_str[-2] in vow_list:
    res += 1
  return (res) ","def count_vowels(str):
    n = len(str)
    for i in range(1,n):
        if ord(str[i]) in 'a' and ord(str[i]) in 'aeiou':
            n = n% ord(str[i])
    return n",0.0023718682383165,0.0700184794621042,0.0007320113761947,0.0007668690607754,0.0008052125138141,0.861215353012085,0.7606792449951172,0.807831346988678,0.7696641683578491
22,Write a python function to find the average of odd numbers till a given odd number.,"def average_Odd(n) : 
    if (n%2==0) : 
        return (""Invalid Input"") 
        return -1 
    sm =0
    count =0
    while (n>=1) : 
        count=count+1
        sm = sm + n 
        n = n-2
    return sm//count ","def odd_Average(n): 
    if n % 2!= 0: 
        return n 
    else: 
        return 0",0.0064652181937079,0.1212605373178243,0.0022047370421422,0.0024252107463564,0.0026946786070627,0.8928342461585999,0.7813104391098022,0.8333576917648315,0.7911933064460754
23,Write a function to sort the given array by using shell sort.,"def shell_sort(my_list):
    gap = len(my_list) // 2
    while gap > 0:
        for i in range(gap, len(my_list)):
            current_item = my_list[i]
            j = i
            while j >= gap and my_list[j - gap] > current_item:
                my_list[j] = my_list[j - gap]
                j -= gap
            my_list[j] = current_item
        gap //= 2

    return my_list","def shell_sort(my_list):
    arr_len = len(my_list)
    while arr_len > 1:
        child = my_list[0]
        child.sort()
        arr_len = int(child.sort()[0])
        child.sort()
    return arr_len
def sort_list(my_list):
    arr = sorted(my_list, key=lambda x: x[1])
    return arr_len",0.0126399818276737,0.1790870728727233,0.0370966079522069,0.001923527819744,0.0019975096589649,0.8234357237815857,0.8060247898101807,0.8146371841430664,0.8077326416969299
24,Write a function to check whether the given month number contains 31 days or not.,"def check_monthnumb_number(monthnum2):
  if(monthnum2==1 or monthnum2==3 or monthnum2==5 or monthnum2==7 or monthnum2==8 or monthnum2==10 or monthnum2==12):
    return True
  else:
    return False","def check_monthnum_number(monthnum1):
  if(monthnum1 == 2):
    return True
  else:
    return False",0.151247605232157,0.2207276647028654,0.1635019738539743,0.1379547904392908,0.1051084117632692,0.944036066532135,0.8425632119178772,0.8904179334640503,0.8517181873321533
25,Write a function to check if a binary tree is balanced or not.,"class Node: 
	def __init__(self, data): 
		self.data = data 
		self.left = None
		self.right = None
def get_height(root): 
	if root is None: 
		return 0
	return max(get_height(root.left), get_height(root.right)) + 1
def is_tree_balanced(root): 
	if root is None: 
		return True
	lh = get_height(root.left) 
	rh = get_height(root.right) 
	if (abs(lh - rh) <= 1) and is_tree_balanced( 
	root.left) is True and is_tree_balanced( root.right) is True: 
		return True
	return False","def check_balanced(node): 
	if node == Node: 
		return True
	if node == Node: 
		return False
	if node == Node: 
		return True
	else:
		return False",0.0069134632691415,0.0999823629364547,0.0261317539493006,0.0009125374394993,0.0009581643114743,0.8470923900604248,0.713992714881897,0.7748684883117676,0.7253904342651367
26,Write a function to check whether the given number is undulating or not.,"def is_undulating(n): 
	if (len(n) <= 2): 
		return False
	for i in range(2, len(n)): 
		if (n[i - 2] != n[i]): 
			return False
	return True","def is_undotify(n): 
	temp = n 
	n1 = 0
	temp = 0
	while temp > 0: 
		temp = int(temp / 10) 
		n1 += 1
		temp = int(temp / 10) 
		if (temp == n1): 
			return True
		elif (temp > n2): 
			return False
		temp = n2 
	return False",0.0160955965063186,0.1777777777777777,0.0681818181818181,0.0023255813953488,0.0023809523809523,0.7963327765464783,0.8382778763771057,0.8167670965194702,0.8338856101036072
27,Write a python function to find the sum of the three lowest positive numbers from a given list of numbers.,"def sum_three_smallest_nums(lst):
	return sum(sorted([x for x in lst if x > 0])[:3])","def sum_of_three(nums):
    sum = 0
    for i in nums:
        sum = sum + i*i       
    return sum",0.0173957973756422,0.25,0.0066666666666666,0.0071428571428571,0.0076923076923076,0.8314858675003052,0.8024681806564331,0.8167194128036499,0.805278480052948
28,"Write a function to extract specified number of elements from a given list, which follow each other continuously.","from itertools import groupby 
def extract_elements(numbers, n):
    result = [i for i, j in groupby(numbers) if len(list(j)) == n] 
    return result","def extract_sublists(list1):
    result = []
    for i in list1:
        result.append(i)
    return result",0.027676236769835,0.2755471557655919,0.0858848277710935,0.0047236655274101,0.0052485172526779,0.8819972276687622,0.7950503826141357,0.8362699151039124,0.8029659390449524
29,Write a python function to split a string into characters.,"def split(word): 
    return [char for char in word] ","def split_String(str): 
    return (str[0])",0.0351487760467425,0.1839397205857211,0.012262648039048,0.0183939720585721,0.0367879441171442,0.880326509475708,0.8429140448570251,0.8612141013145447,0.8465116024017334
30,"Write a function to find entringer number e(n, k).","def zigzag(n, k): 
	if (n == 0 and k == 0): 
		return 1
	if (k == 0): 
		return 0
	return zigzag(n, k - 1) + zigzag(n - 1, n - k)","def entringer_num(n, k):
  if (k == 0):
    return 1
  if ((n == 1):
    return 2
  if ((n == 2):
    return 3
  or (n == 3):
    return 4
 ",0.232862733239841,0.4471202590987267,0.2653241097948488,0.1724606713666517,0.1437172261388764,0.8599072694778442,0.8453308343887329,0.8525567650794983,0.8467661738395691
31,Write a python function to find the sum of non-repeated elements in a given array.,"def find_Sum(arr,n): 
    arr.sort() 
    sum = arr[0] 
    for i in range(0,n-1): 
        if (arr[i] != arr[i+1]): 
            sum = sum + arr[i+1]   
    return sum","def find_Sum(arr,n): 
    return sum([x for x in arr if arr.count(x) > 1])",0.02239302892148,0.2361832763705073,0.0429424138855467,0.0047236655274101,0.0052485172526779,0.857208251953125,0.8087321519851685,0.8322649002075195,0.813331663608551
32,Write a function to count total characters in a string.,"def count_charac(str1):
 total = 0
 for i in str1:
    total = total + 1
 return total","def count_char(str1):
  count_char= 0
  for i in range(len(str1)):
    if str1[i] == str2[i]:
      count_char += 1
  return count_char",0.1769497514953255,0.4117647058823529,0.25,0.1333333333333333,0.0714285714285714,0.8816215991973877,0.8981466293334961,0.889807403087616,0.8964663147926331
33,Write a python function to find the volume of a triangular prism.,"def find_Volume(l,b,h) : 
    return ((l * b * h) / 2) ","def volume_triangular(a,b,c): 
    if a == 0 or b == 0: 
        return 0
    elif a == 1: 
        return 1
    elif b == 2: 
        return 2
    else:
        return a * a + b * b ",0.0178633654568444,0.1515151515151515,0.0625,0.0032258064516129,0.0033333333333333,0.7720316052436829,0.8218701481819153,0.7961717247962952,0.8165985345840454
34,Write a function to find the index of the last occurrence of a given number in a sorted array.,"def find_last_occurrence(A, x):
    (left, right) = (0, len(A) - 1)
    result = -1
    while left <= right:
        mid = (left + right) // 2
        if x == A[mid]:
            result = mid
            left = mid + 1
        elif x < A[mid]:
            right = mid - 1
        else:
            left = mid + 1
    return result ","def find_last_occurrence(A, x):
    (left, right) = (0, len(A) - 1)
    result = -1
    while left <= right:
        mid = (left + right) // 2
        if x == A[mid]:
            result = mid
            right = mid - 1
        elif x < A[mid]:
            right = mid - 1
        else:
            left = mid + 1
    return result",0.9060835530358324,0.9622641509433962,0.9230769230769232,0.8823529411764706,0.86,0.9936277866363525,0.9931333065032959,0.9933804869651794,0.9931826591491699
35,Write a function to find the longest chain which can be formed from the given set of pairs.,"class Pair(object): 
	def __init__(self, a, b): 
		self.a = a 
		self.b = b 
def max_chain_length(arr, n): 
	max = 0
	mcl = [1 for i in range(n)] 
	for i in range(1, n): 
		for j in range(0, i): 
			if (arr[i].a > arr[j].b and
				mcl[i] < mcl[j] + 1): 
				mcl[i] = mcl[j] + 1
	for i in range(n): 
		if (max < mcl[i]): 
			max = mcl[i] 
	return max","def longest_chain(arr): 
    if len(arr)>1: 
        return arr[0] 
    arr.sort() 
    result = 1
    for i in range(len(arr)): 
        if arr[i] == arr[i+1]: 
            result = arr[i] 
    return result",0.0227715770942982,0.0763796058395106,0.0239554218314828,0.0167307708029404,0.0087836546715437,0.857825756072998,0.8009123802185059,0.8283926844596863,0.8062616586685181
36,Write a python function to find the highest power of 2 that is less than or equal to n.,"def highest_Power_of_2(n): 
    res = 0; 
    for i in range(n, 0, -1): 
        if ((i & (i - 1)) == 0): 
            res = i; 
            break; 
    return res; ","def highest_Power_of_2(n): 
    res = 0; 
    for i in range(n, 0, -1):  
        if ((i & (i - 1)) == 0): 
            res = i; 
            break;      
    return res; ",1.0,1.0,1.0,1.0,1.0,0.997773289680481,0.997773289680481,0.997773289680481,0.997773289680481
37,Write a python function to find sum of even index binomial coefficients.,"import math  
def even_binomial_Coeff_Sum( n): 
    return (1 << (n - 1)) ","def Odd_Num_Coeff(n): 
    res = 1 
    if (n == 0): 
        return 1
    res *= (1 - n) 
    return res ",0.0161532284064872,0.2777777777777778,0.0058823529411764,0.00625,0.0066666666666666,0.8502365946769714,0.8555371165275574,0.8528785705566406,0.855004072189331
38,Write a python function to find smallest power of 2 greater than or equal to n.,"def next_Power_Of_2(n): 
    count = 0; 
    if (n and not(n & (n - 1))): 
        return n   
    while( n != 0): 
        n >>= 1
        count += 1
    return 1 << count; ","def smallest_Power_of_2(n): 
    res = 1; 
    for i in range(n, 0, -1):  
        if ((i & (i - 1)) == 0): 
            res = i; 
            break;      
    return res; ",0.0105005476754987,0.2386002609105392,0.0035505991206925,0.0037049729955052,0.0038733808589373,0.8706491589546204,0.8816109299659729,0.8760957717895508,0.8805022835731506
39,Write a function to count the number of inversions in the given array.,"def get_inv_count(arr, n): 
	inv_count = 0
	for i in range(n): 
		for j in range(i + 1, n): 
			if (arr[i] > arr[j]): 
				inv_count += 1
	return inv_count ","def get_Inv_Count(arr,n): 
    inv_count = 0
    for i in range(n): 
        if (arr[i] > arr[i + 1]): 
            inv_count += 1
    return inv_count ",0.4109995832132582,0.6296954875794601,0.467885192009506,0.3704091103408589,0.2614652543582534,0.9722020626068115,0.9595282077789307,0.9658235907554626,0.9607807397842407
40,Write a python function to accept the strings which contains all vowels.,"def check(string): 
  if len(set(string).intersection(""AEIOUaeiou""))>=5: 
    return ('accepted') 
  else: 
    return (""not accepted"") ","def vowels(string):
    vowels = set(string.ascii_lowercase)
    return [x for x in string if not vowels.issubset(x)]",0.018798317647335,0.2142857142857142,0.0076923076923076,0.0083333333333333,0.009090909090909,0.7599007487297058,0.7672644853591919,0.763564944267273,0.7665217518806458
41,Write a function to split a string at uppercase letters.,"import re
def split_upperstring(text):
 return (re.findall('[A-Z][^A-Z]*', text))","import re
def split_list(text):
 return (re.findall('[A-Z][^A-Z]*', text))",0.274941620352113,0.8571428571428571,0.6666666666666666,0.4,0.025,0.9879979491233826,0.9758183360099792,0.9818703532218933,0.9770227074623108
42,Write a function to count the frequency of consecutive duplicate elements in a given list of numbers.,"def count_duplic(lists):
    element = []
    frequency = []
    if not lists:
        return element
    running_count = 1
    for i in range(len(lists)-1):
        if lists[i] == lists[i+1]:
            running_count += 1
        else:
            frequency.append(running_count)
            element.append(lists[i])
            running_count = 1
    frequency.append(running_count)
    element.append(lists[i+1])
    return element,frequency
","def consecutive_unique_nums(nums):
    result = defaultdict(int)
    for x in nums:
        result[x] += 1
    return result",0.0079915199599904,0.0967133023001962,0.0148789695846455,0.0016118883716699,0.0017584236781853,0.7498884797096252,0.7093455791473389,0.7290538549423218,0.7132015228271484
43,Write a function to find the largest palindromic number in the given array.,"def is_palindrome(n) : 
	divisor = 1
	while (n / divisor >= 10) : 
		divisor *= 10
	while (n != 0) : 
		leading = n // divisor 
		trailing = n % 10
		if (leading != trailing) : 
			return False
		n = (n % divisor) // 10
		divisor = divisor // 100
	return True
def largest_palindrome(A, n) : 
	A.sort() 
	for i in range(n - 1, -1, -1) : 
		if (is_palindrome(A[i])) : 
			return A[i] 
	return -1","def largest_palindic(arr): 
	n = len(arr) 
	L = [0 for x in range(n)] 
	for i in range(n): 
		L[i][i] = 1
	for x in range(2, n): 
		for i in range(n): 
			if arr[i] == arr[i] and i!= i: 
				L[i][i] = max(L[i][i], L[i]) 
			else: 
",0.0164927373113786,0.120514622927861,0.0449471787143537,0.0115324998017091,0.0011844188985539,0.8175981640815735,0.7510494589805603,0.7829121351242065,0.75721275806427
44,"Write a function to find out, if the given number is abundant.","def is_abundant(n):
    fctrsum = sum([fctr for fctr in range(1, n) if n % fctr == 0])
    return fctrsum > n","import math 
def check_abundant(n): 
	if (n % 2 == 0): 
		return True
	if (n == 1): 
		return False
	if (n == 2): 
		return True
	if (n == 3): 
		return False
	sum = 0
	for i in range(1,n): 
		sum = sum + i 
		if (sum == i): 
			sum = sum + i 
			sum = sum",0.0056978591513136,0.1481481481481481,0.0018867924528301,0.0019230769230769,0.0019607843137254,0.7789268493652344,0.7671490907669067,0.7729930877685547,0.7683107852935791
45,Write a function to move all zeroes to the end of the given array.,"def re_order(A):
    k = 0
    for i in A:
        if i:
            A[k] = i
            k = k + 1
    for i in range(k, len(A)):
        A[i] = 0
    return A","def move_zero(num_list):
    a = [0 for i in range(num_list.count(0))]
    x = [ i for i in num_list if i!= 0]
    x.extend(a)
    return (x)",0.0631573128426167,0.4019381204828587,0.1400693450167538,0.0733696569135377,0.0038519069879607,0.8147901296615601,0.8332458138465881,0.8239145874977112,0.8313627243041992
46,Write a function to extract the maximum numeric value from a string by using regex.,"import re 
def extract_max(input): 
	numbers = re.findall('\d+',input) 
	numbers = map(int,numbers) 
	return max(numbers)","import re
def extract_max_num(text):
  return (re.findall(r""\b\d+"", text))",0.0859987880668714,0.2797380911754017,0.163180553185651,0.0979083319113906,0.0122385414889238,0.9042327404022217,0.8545252084732056,0.8786765933036804,0.859248697757721
47,Write a python function to find the next perfect square greater than a given number.,"import math  
def next_Perfect_Square(N): 
    nextN = math.floor(math.sqrt(N)) + 1
    return nextN * nextN ","def next_greater_than(n):
    if (n % 2 == 0):
        return n
    if ((n == 1) :
        return 1
    elif ((n == 2) :
        return 2
    else:
        return n ",0.0091866722624121,0.111111111111111,0.0038461538461538,0.004,0.0041666666666666,0.7965878844261169,0.7826831340789795,0.7895742654800415,0.784051775932312
48,Write a function to check whether a specified list is sorted or not.,"def issort_list(list1):
    result = all(list1[i] <= list1[i+1] for i in range(len(list1)-1))
    return result","def check_sorted(l):
    if len(l) == 1:
        return False
    if l in list.keys():
        return True
    else:
        return False",0.015138514598766,0.1764705882352941,0.00625,0.0066666666666666,0.0071428571428571,0.8055096864700317,0.7534187436103821,0.778593897819519,0.7583227157592773
49,Write a python function to find lcm of two positive integers.,"def lcm(x, y):
   if x > y:
       z = x
   else:
       z = y
   while(True):
       if((z % x == 0) and (z % y == 0)):
           lcm = z
           break
       z += 1
   return lcm","def find_lcm(x, y): 
    num1 = 1
    num2 = 1
    while num1 > 0: 
        num1 = num1 // 2
        num2 = num2 // 2
        if num1 % 2 == 0: 
            num1 = num1
            num2 = num2 
        else: 
            num1 = num1
    return num1 ",0.0083824756124659,0.2926829268292683,0.0025,0.0025641025641025,0.0026315789473684,0.784281849861145,0.8464086651802063,0.8141617774963379,0.8397564888000488
50,Write a function to extract values between quotation marks of a string.,"import re
def extract_values(text):
 return (re.findall(r'""(.*?)""', text))","import re
def extract_quotation(text):
  return (re.findall(r'""(.*?)""', text))",0.274941620352113,0.8571428571428571,0.6666666666666666,0.4,0.025,0.9658230543136597,0.9778553247451782,0.9718019962310791,0.9766385555267334
51,Write a function to find the greatest common divisor (gcd) of two integers by using recursion.,"def recur_gcd(a, b):
	low = min(a, b)
	high = max(a, b)
	if low == 0:
		return high
	elif low == 1:
		return 1
	else:
		return recur_gcd(low, high%low)","def find_gcd(x, y): 
	if(x==y): 
		return y 
	a, b = y, x 
	return a 
def find_gcd(x, y): 
	if(x<=y): 
		return x 
	a, b = y, x % y 
	return find_gcd(x, y)",0.0101289523309321,0.2068965517241379,0.0035714285714285,0.0037037037037037,0.0038461538461538,0.8561453223228455,0.8252525925636292,0.8404151797294617,0.8282411098480225
52,Write a python function to count the number of integral co-ordinates that lie inside a square.,"def count_Intgral_Points(x1,y1,x2,y2): 
    return ((y2 - y1 - 1) * (x2 - x1 - 1)) ","def Check_Solution(n): 
    if (n < 2): 
        return 0
    res = 1
    while (n % 2 == 0): 
        res *= (2 * n) 
        n = n / 2 
    return res ",0.0085173997053566,0.1034482758620689,0.0035714285714285,0.0037037037037037,0.0038461538461538,0.7691483497619629,0.7180378437042236,0.7427148222923279,0.7228411436080933
53,Write a function to convert rgb color to hsv color.,"def rgb_to_hsv(r, g, b):
    r, g, b = r/255.0, g/255.0, b/255.0
    mx = max(r, g, b)
    mn = min(r, g, b)
    df = mx-mn
    if mx == mn:
        h = 0
    elif mx == r:
        h = (60 * ((g-b)/df) + 360) % 360
    elif mx == g:
        h = (60 * ((b-r)/df) + 120) % 360
    elif mx == b:
        h = (60 * ((r-g)/df) + 240) % 360
    if mx == 0:
        s = 0
    else:
        s = (df/mx)*100
    v = mx*100
    return h, s, v","def rgb_to_hsv(rgb):
    h = float(rgb[0])
    s = rgb[1]
    v = float(rgb[2])
    colorsys.rgb_to_hsv(rgb, h, s)
    return colorsys.hsv_to_rgb(rgb)",0.0005539175369313,0.0062488105527612,0.0022217993076484,7.934997527315937e-05,8.545381952494083e-05,0.787446141242981,0.6692016124725342,0.7235246300697327,0.6794036626815796
54,Write a function to count the number of elements in a list which are within a specific range.,"def count_range_in_list(li, min, max):
	ctr = 0
	for x in li:
		if min <= x <= max:
			ctr += 1
	return ctr","def count_Range_list(list1):
    m = len(list1)
    result = 0
    for i in list1:
        if (i < m):
            result += 1
    return result",0.0802294075853131,0.4086415520714899,0.1906993909666953,0.100368100508787,0.0052972053046304,0.8747001886367798,0.8683326840400696,0.8715047836303711,0.8689652681350708
55,Write a python function to find the sum of the largest and smallest value in a given array.,"def big_sum(nums):
      sum= max(nums)+min(nums)
      return sum","def largest_Sum(arr): 
    max = arr[0] 
    for i in range(1, len(arr)): 
        if arr[i] > max: 
            max = arr[i] 
    return max",0.0121090130264418,0.1052631578947368,0.0055555555555555,0.0058823529411764,0.00625,0.7825456261634827,0.8152514696121216,0.7985637784004211,0.8118583559989929
56,Write a function to multiply two lists using map and lambda function.,"def mul_list(nums1,nums2):
  result = map(lambda x, y: x * y, nums1, nums2)
  return list(result)","def multiply_list(nums1,nums2):
  result = map(lambda x, y: x * y, nums1, nums2)
  return list(result)",0.855526185871245,0.9285714285714286,0.8461538461538461,0.8333333333333334,0.8181818181818182,0.9972545504570007,0.9972545504570007,0.9972545504570007,0.9972545504570007
57,Write a python function to find minimum sum of factors of a given number.,"def find_Min_Sum(num): 
    sum = 0
    i = 2
    while(i * i <= num): 
        while(num % i == 0): 
            sum += i 
            num /= i 
        i += 1
    sum += num 
    return sum","import math 
def min_Sum_of_Factors(n): 
    res = 1
    if (n % 2!= 0): 
        return 0
    res *= 2 
    for i in range(2, (int)(math.sqrt(n)) + 1) :    
        count = 0
        curr_sum = 1
        curr_term = 1
        while (n % i == 0): 
            count= count + 1
            n = n // i 
            curr_sum = curr_sum +",0.0620231024745143,0.2452830188679245,0.0769230769230769,0.0392156862745098,0.02,0.7686290144920349,0.8391100764274597,0.802324652671814,0.8314856290817261
58,Write a function to find the nth octagonal number.,"def is_octagonal(n): 
	return 3 * n * n - 2 * n ","def is_octagonal(n): 
	return int(n * (7 * n + 5) / 2) ",0.1109466047156616,0.5,0.2727272727272727,0.1,0.0111111111111111,0.8868349194526672,0.9257913827896118,0.9058945178985596,0.9217423796653748
59,Write a function to sort counter by value.,"from collections import Counter
def sort_counter(dict1):
 x = Counter(dict1)
 sort_counter=x.most_common()
 return sort_counter","def sort_by_value(x):
    y = x * x
    return y",0.0242999132858935,0.3184583602550174,0.0089566413821723,0.0102361615796255,0.0119421885095631,0.8591464757919312,0.8044798970222473,0.8309149742126465,0.8096314668655396
60,"Write a function to assign with each element, its pair elements from other similar pairs in the given tuple.","def assign_elements(test_list):
  res = dict()
  for key, val in test_list:
    res.setdefault(val, [])
    res.setdefault(key, []).append(val)
  return (res) ","def assign_pair(test_list):
  temp = [tuple(i) for i in test_list]
  res = [tuple(i) for i in temp]
  return (res) ",0.0371577015251552,0.3888888888888889,0.1176470588235294,0.00625,0.0066666666666666,0.8670270442962646,0.8465613126754761,0.8566719889640808,0.8485642671585083
61,Write a function to list out the list of given strings individually using map function.,"def listify_list(list1):
  result = list(map(list,list1)) 
  return result ","def list_strings(nums):
    result = map(lambda x:x ** 2, nums) 
    return result",0.059609942732681,0.4545454545454545,0.2,0.0111111111111111,0.0125,0.8226960897445679,0.8726763129234314,0.8469494581222534,0.8674066662788391
62,Write a function to put spaces between words starting with capital letters in a given string by using regex.,"import re
def capital_words_spaces(str1):
  return re.sub(r""(\w)([A-Z])"", r""\1 \2"", str1)","import re
def capitalize_spaces(text):
  return (re.sub('[A-Z]', '',text))",0.1320135584022327,0.4294155960430205,0.2504924310250953,0.1502954586150572,0.0187869323268821,0.9469342231750488,0.8719708919525146,0.9079078435897827,0.8789288401603699
63,Write a python function to count integers from a given list.,"def count_integer(list1):
    ctr = 0
    for i in list1:
        if isinstance(i, int):
            ctr = ctr + 1
    return ctr","def count_int(list):
    count = 0
    for i in list:
        if i == 1:
            count = count + 1
    return count",0.2595865729034343,0.55,0.3157894736842105,0.2222222222222222,0.1176470588235294,0.9406715631484985,0.8996609449386597,0.919709324836731,0.9036003351211548
64,Write a function to find the first duplicate element in a given array of integers.,"def find_first_duplicate(nums):
    num_set = set()
    no_duplicate = -1

    for i in range(len(nums)):

        if nums[i] in num_set:
            return nums[i]
        else:
            num_set.add(nums[i])

    return no_duplicate","def first_duplicate(nums):
    arr_len = len(nums)
    first_duplicate = next((el for el in nums if nums.count(el) > 1),-1)
    return first_duplicate",0.0140695905243329,0.311397878912092,0.0047102200171576,0.00500460876823,0.0053382493527787,0.8674429655075073,0.8452979922294617,0.8562273979187012,0.8474615216255188
65,Write a function to find out the maximum sum such that no two chosen numbers are adjacent for the given rectangular grid of dimension 2 x n.,"def max_sum_rectangular_grid(grid, n) : 
	incl = max(grid[0][0], grid[1][0]) 
	excl = 0
	for i in range(1, n) : 
		excl_new = max(excl, incl) 
		incl = excl + max(grid[0][i], grid[1][i]) 
		excl = excl_new 
	return max(excl, incl)","def max_sum_pairwise(n, k): 
	dp = [0] * (k + 1) 
	dp[0] = 0
	for i in range(1, n): 
		dp[i] = dp[i - 1] + 2 * dp[i - 2] 
		if (dp[1] > n): 
			dp[1] = max(dp[1], i) 
		else: 
			dp[1] = max(dp[1], i) 
	",0.1279510009658561,0.2857142857142857,0.1219512195121951,0.1,0.0769230769230769,0.8175909519195557,0.7962754964828491,0.8067924380302429,0.7983568906784058
66,Write a python function to get the first element of each sublist.,"def Extract(lst): 
    return [item[0] for item in lst] ","def Find_First(lst): 
    return [item[0] for item in lst] ",0.7071067811865475,0.875,0.7142857142857143,0.6666666666666666,0.6,0.9713330268859863,0.9855467677116394,0.978388249874115,0.9841066598892212
67,Write a function to remove all elements from a given list present in another list.,"def remove_elements(list1, list2):
    result = [x for x in list1 if x not in list2]
    return result","def remove_list(list1, list2):
    result = [i for i in list1 if i not in list2]
    return result",0.3673341329152363,0.7647058823529411,0.5,0.3333333333333333,0.1428571428571428,0.9731625914573669,0.9605398774147034,0.9668100476264954,0.9617874026298523
68,Write a function to filter a dictionary based on values.,"def dict_filter(dict,n):
 result = {key:value for (key, value) in dict.items() if value >=n}
 return result","def filter_dict(test_dict):
  res = {k: v for k, v in test_dict.items() if v}
  return (res) ",0.0206872060102594,0.4,0.0071428571428571,0.0076923076923076,0.0083333333333333,0.9019805788993835,0.9004964232444763,0.9012379050254822,0.9006446003913879
69,Write a python function to check whether a string has atleast one letter and one number.,"def check_String(str): 
    flag_l = False
    flag_n = False
    for i in str: 
        if i.isalpha(): 
            flag_l = True  
        if i.isdigit(): 
            flag_n = True
    return flag_l and flag_n ","def check_Two(string): 
    s = string.strip() 
    if (s == s): 
        return True
    else: 
        return False",0.0094868944726466,0.1818740767186928,0.0032644065052073,0.0035364403806412,0.0038579349606995,0.8653756976127625,0.7833097577095032,0.8223002552986145,0.7908092737197876
70,Write a function to find out the minimum no of swaps required for bracket balancing in the given string.,"def swap_count(s):
	chars = s
	count_left = 0
	count_right = 0
	swap = 0
	imbalance = 0; 
	for i in range(len(chars)):
		if chars[i] == '[':
			count_left += 1
			if imbalance > 0:
				swap += imbalance
				imbalance -= 1
		elif chars[i] == ']':
			count_right += 1
			imbalance = (count_right - count_left) 
	return swap","def min_Swaps(str1): 
    count = 0
    for i in range(len(str1)) : 
        if (str1[i] == '{'): 
            count += 1
    if (count % 2 == 0): 
        return ""Input is not an integer!"" 
    elif (count % 2 == 1): 
        return ""Input must be bigger than 0!"" 
    else: 
        return ""Input must be bigger than 0!"" 
def min_Swaps(str1): 
        count = count",0.0367928897530738,0.2727272727272727,0.0925925925925925,0.0377358490566037,0.0019230769230769,0.7870137095451355,0.8131548762321472,0.7998707890510559,0.8104629516601562
71,Write a function to find maximum run of uppercase characters in the given string.,"def max_run_uppercase(test_str):
  cnt = 0
  res = 0
  for idx in range(0, len(test_str)):
    if test_str[idx].isupper():
      cnt += 1
    else:
      res = cnt
      cnt = 0
  if test_str[len(test_str) - 1].isupper():
    res = cnt
  return (res)","def max_upper_char(str1):
    dict = {}
    for i in range (len(str1)):
        if str1[i] == str2[i] and i!= ord('A') - 1:
            dict[ord(str1[i])] = 1
    for i in range(len(str1)):
        if dict[i] == str2[i] and len(dict[i]) >= 2:
            dict[i] = max(dict.get(i, i), i",0.0084364918806299,0.2564102564102564,0.0026315789473684,0.0027027027027027,0.0027777777777777,0.7812905311584473,0.78010094165802,0.7806953191757202,0.7802197337150574
72,Write a python function to check whether the value exists in a sequence or not.,"def overlapping(list1,list2):  
    c=0
    d=0
    for i in list1: 
        c+=1
    for i in list2: 
        d+=1
    for i in range(0,c): 
        for j in range(0,d): 
            if(list1[i]==list2[j]): 
                return 1
    return 0","def check_value(seq,value): 
    if value in seq: 
        return True
    else: 
        return False",0.0062249037088232,0.0849114469421503,0.0023350647909091,0.0025945164343434,0.0029188309886364,0.7910391092300415,0.7229212522506714,0.7554478049278259,0.729200541973114
73,Write a function to search an element in the given array by using binary search.,"def binary_search(item_list,item):
	first = 0
	last = len(item_list)-1
	found = False
	while( first<=last and not found):
		mid = (first + last)//2
		if item_list[mid] == item :
			found = True
		else:
			if item < item_list[mid]:
				last = mid - 1
			else:
				first = mid + 1	
	return found","def binary_search(my_list, item):
    binary_search = binary_search(my_list, item)
    return binary_search(my_list, item)",0.000686725377119,0.0074170579411018,0.0002747058496704,0.0003090440808792,0.0003531932352905,0.838603138923645,0.7212337255477905,0.7755027413368225,0.7314713001251221
74,Write a python function to find number of elements with odd factors in a given range.,"def count_Odd_Squares(n,m): 
    return int(m**0.5) - int((n-1)**0.5) ","import math 
def count_odd_Factors(arr,n): 
    res = 1
    while (n % 2!= 0): 
        n = n // 2 
    for i in range(3,int(math.sqrt(n) + 1)): 
        count = 0
        curr_sum = 1
        curr_term = 1
        while (n % i == 0): 
            count= count + 1
            n = n // i 
            curr_term *= i 
            curr_sum += curr",0.0034537838276078,0.0188679245283018,0.0019230769230769,0.0019607843137254,0.002,0.688598096370697,0.7538034915924072,0.7197269201278687,0.7467325329780579
75,Write a python function to find the sum of fourth power of first n odd natural numbers.,"def odd_Num_Sum(n) : 
    j = 0
    sm = 0
    for i in range(1,n + 1) : 
        j = (2*i-1) 
        sm = sm + (j*j*j*j)   
    return sm ","def even_Power_Sum(n): 
    sum = 0; 
    for i in range(1,n) : 
        j = 2*i; 
        sum = sum + (j*j*j*j); 
    return sum; ",0.0690965029313685,0.4074500213749448,0.1559617306698353,0.0823131356313019,0.0043577542393042,0.964028537273407,0.9371123313903809,0.9503799080848694,0.9397361278533936
76,Write a python function to find the maximum of two numbers.,"def maximum(a,b):   
    if a >= b: 
        return a 
    else: 
        return b ","def max_of_two( x, y ): 
    if x > y: 
        return x 
    return y",0.0219728138749971,0.3076923076923076,0.0083333333333333,0.009090909090909,0.01,0.885424792766571,0.9140337109565735,0.8995018601417542,0.9110899567604065
77,Write a function to sort a list in a dictionary.,"def sorted_dict(dict1):
  sorted_dict = {x: sorted(y) for x, y in dict1.items()}
  return sorted_dict","def sort_dict(my_dict):
    result = {key: my_dict[key] for key in sorted(my_dict.keys())}
    return result",0.0234340409283761,0.3833518394288847,0.0083640401329938,0.0092004441462932,0.0102227157181035,0.8838351368904114,0.8834710717201233,0.8836530447006226,0.8835074305534363
78,Write a python function to reverse only the vowels of a given string.,"def reverse_vowels(str1):
	vowels = """"
	for char in str1:
		if char in ""aeiouAEIOU"":
			vowels += char
	result_string = """"
	for char in str1:
		if char in ""aeiouAEIOU"":
			result_string += vowels[-1]
			vowels = vowels[:-1]
		else:
			result_string += char
	return result_string","def reverse_Vow(string): 
    for char in string: 
        if char in vowels: 
            return char  
    return''",0.0193693407495546,0.0936936576253472,0.0451117610788708,0.0246064151339295,0.0013533528323661,0.8868088722229004,0.7745071053504944,0.8268623352050781,0.7844409346580505
79,Write a python function to find the average of even numbers till a given even number.,"def average_Even(n) : 
    if (n% 2!= 0) : 
        return (""Invalid Input"") 
        return -1  
    sm = 0
    count = 0
    while (n>= 2) : 
        count = count+1
        sm = sm+n 
        n = n-2
    return sm // count ","def even_average(n): 
    even_average = 0
    for i in range(0, n): 
        if (i % 2 == 0): 
            even_average = even_average + i 
    return even_average",0.0130983643462484,0.1482356357303438,0.025828936528772,0.0027058885887284,0.0028411830181649,0.8300647735595703,0.8186396360397339,0.8243126273155212,0.8197680115699768
80,Write a function to check if a nested list is a subset of another nested list.,"def check_subset(list1,list2): 
    return all(map(list1.__contains__,list2)) ","def check_subset_list(list1, list2): 
    l1, l2 = list1[0], list2[0] 
    exist = True
    for i in list2: 
        if i not in list1: 
            exist = False
    return exist ",0.0090091134743073,0.0799999999999999,0.0041666666666666,0.0043478260869565,0.0045454545454545,0.8266181349754333,0.8815767765045166,0.8532133102416992,0.875754177570343
81,Write a function to find the next smallest palindrome of a specified number.,"import sys
def next_smallest_palindrome(num):
    numstr = str(num)
    for i in range(num+1,sys.maxsize):
        if str(i) == str(i)[::-1]:
            return i","def next_palindrome(num):
    for x in range(num-1,0,-1):
        if str(x) == str(x)[::-1]:
            return x",0.017574285132979,0.3296203151002218,0.0059930966381858,0.0065924063020044,0.007324895891116,0.9247995018959045,0.8842533826828003,0.9040719866752625,0.8881473541259766
82,Write a function to find the volume of a cuboid.,"def volume_cuboid(l,w,h):
  volume=l*w*h
  return volume","def volume_cuboid(l,w,h):
  volume = (l * (w + h) * (2 * w + h)) / (1 - l)
  return volume",0.0273182985939109,0.1904761904761904,0.1,0.0052631578947368,0.0055555555555555,0.8773466348648071,0.9537681937217712,0.913962721824646,0.9455321431159973
83,Write a function to get the frequency of the elements in a list.,"import collections
def freq_count(list1):
  freq_count= collections.Counter(list1)
  return freq_count","def freq_element(test_tup):
  res = {}
  for ele in test_tup:
    res[ele] = res.get(ele, 0) + 1
  return (str(res)) ",0.0136791921231218,0.1176470588235294,0.00625,0.0066666666666666,0.0071428571428571,0.7763581871986389,0.819212794303894,0.7972099184989929,0.814715564250946
84,Write a function to remove uppercase substrings from a given string by using regex.,"import re
def remove_uppercase(str1):
  remove_upper = lambda text: re.sub('[A-Z]', '', text)
  result =  remove_upper(str1)
  return (result)","import re
def remove_uppercase(str1):
  remove_upper = lambda text: re.sub('[a-z]', '', text)
  result =  remove_upper(str1)
  return (result)",0.8153551038173115,0.9375,0.8666666666666667,0.7857142857142857,0.6923076923076923,0.9931081533432007,0.9931081533432007,0.9931081533432007,0.9931082725524902
85,Write a python function to count unset bits of a given number.,"def count_unset_bits(n): 
    count = 0
    x = 1
    while(x < n + 1): 
        if ((x & n) == 0): 
            count += 1
        x = x << 1
    return count  ","def count_Unset_Bits(n): 
    count = 0; 
    while (n): 
        count += n & 1
        n >>= 1
    return count; ",0.0236331958074942,0.290395757875959,0.0925636478229619,0.0032911519225942,0.0035262342027795,0.9344082474708557,0.8922364711761475,0.9128355979919434,0.8962815403938293
86,Write a function to decode a run-length encoded given list.,"def decode_list(alist):
    def aux(g):
        if isinstance(g, list):
            return [(g[1], range(g[0]))]
        else:
            return [(g, [0])]
    return [x for g in alist for x, R in aux(g) for i in R]","def decode_list(list1):
    for i in list1:
        if len(i)!= len(list1):
            list1 = [i]
    return list1",0.0287950916655046,0.1467937950398766,0.0526952084758531,0.0285432379244204,0.0031138077735731,0.8359465003013611,0.7967393398284912,0.8158721327781677,0.8004937171936035
87,Write a python function to convert decimal number to octal number.,"def decimal_to_Octal(deciNum):
    octalNum = 0
    countval = 1;
    dNo = deciNum;
    while (deciNum!= 0):
        remainder= deciNum % 8;
        octalNum+= remainder*countval;
        countval= countval*10;
        deciNum //= 8; 
    return (octalNum)","def octal_To_Decimal(n):  
    num = n; 
    dec_value = 0; 
    base = 1; 
    temp = num; 
    while (temp): 
        last_digit = temp % 10; 
        temp = int(temp / 10); 
        dec_value += last_digit*base; 
        base = base * 8; 
    return dec_value; ",0.0188897963468497,0.25,0.0571428571428571,0.0029411764705882,0.003030303030303,0.8484925031661987,0.8328689336776733,0.8406081199645996,0.8344054222106934
88,Write a function to find n’th smart number.,"MAX = 3000 
def smartNumber(n): 
	primes = [0] * MAX 
	result = [] 
	for i in range(2, MAX): 
		if (primes[i] == 0): 
			primes[i] = 1 
			j = i * 2 
			while (j < MAX): 
				primes[j] -= 1 
				if ( (primes[j] + 3) == 0): 
					result.append(j) 
				j = j + i 
	result.sort() 
	return result[n - 1] ","def find_ssch_num(n): 
	res = [0] * (n + 1) 
	for i in range(2, n) : 
		res[i] = (res[i] * (2 * i + 1)) % n 
	return res[n] ",0.0548165969750775,0.1906277139045151,0.0706028570016722,0.0439910109010419,0.0152502171123612,0.8728868961334229,0.818154513835907,0.8446348905563354,0.8233169317245483
89,Write a function to find average value of the numbers in a given tuple of tuples.,"def average_tuple(nums):
    result = [sum(x) / len(x) for x in zip(*nums)]
    return result","def average_values(test_list):
  res = sum(map(sum, test_list))
  return (res) ",0.0195667610787684,0.2007230356946213,0.0076465918359855,0.0089210238086498,0.0107052285703798,0.8497695922851562,0.7822209596633911,0.8145973682403564,0.7884886860847473
90,Write a function to find m number of multiples of n.,"def multiples_of_num(m,n): 
    multiples_of_num= list(range(n,(m+1)*n, n)) 
    return list(multiples_of_num)","def count_multiples(n):
    if (n < 2):
        return 1
    res = 0
    for i in range(0, n) :
        count = 0
        for j in range(0, i):
            if (arr[i] * arr[j]) % n == 0:
                res += 1
    return res",0.0057965359335958,0.0526315789473684,0.0027027027027027,0.0027777777777777,0.0028571428571428,0.746256947517395,0.7870122194290161,0.7660929560661316,0.7827374339103699
91,Write a function to find the equilibrium index of the given array.,"def equilibrium_index(arr):
  total_sum = sum(arr)
  left_sum=0
  for i, num in enumerate(arr):
    total_sum -= num
    if left_sum == total_sum:
      return i
    left_sum += num
  return -1","def find_equilib(arr, n):
  for i in range(n):
    if arr[i] == arr[i + 1]:
      return i",0.0196294839400148,0.2395946555485429,0.0366726513594708,0.0039493624540968,0.0042784759919382,0.8648860454559326,0.7935616374015808,0.8276901245117188,0.80016028881073
92,Write a python function to check whether the given number can be represented as difference of two squares or not.,"def dif_Square(n): 
    if (n % 4 != 2): 
        return True
    return False","def is_Diff(n): 
    i = 1
    while i*i <= n: 
        j = 1
        while (j*j <= n) : 
            if (i*i+j*j == n) : 
                return True
            j = j+1
        i = i+1     
    return False",0.0193102359456645,0.1875,0.064516129032258,0.0033333333333333,0.0034482758620689,0.7451938390731812,0.8462468385696411,0.7925119996070862,0.8349247574806213
93,Write a python function to count hexadecimal numbers for a given range.,"def count_Hexadecimal(L,R) :  
    count = 0;  
    for i in range(L,R + 1) : 
        if (i >= 10 and i <= 15) : 
            count += 1;  
        elif (i > 15) : 
            k = i;  
            while (k != 0) :  
                if (k % 16 >= 10) : 
                    count += 1;  
                k = k // 16;  
    return count;  ","def hex_range(start,end):
    return int(math.log2(end - start,end) + 1)",0.0001962038821529,0.0014043970972627,0.0004012563135036,4.681323657542522e-05,5.617588389051026e-05,0.7091487646102905,0.6683489680290222,0.6881446838378906,0.672216534614563
94,Write a python function to find the sum of fifth power of first n even natural numbers.,"def even_Power_Sum(n): 
    sum = 0; 
    for i in range(1,n+1): 
        j = 2*i; 
        sum = sum + (j*j*j*j*j); 
    return sum; ","def odd_Num_Sum(n) : 
    j = 0
    sm = 0
    for i in range(1,n) : 
        j = (2*i-1) 
        sm = sm + (j*j*j*j*j)     
    return sm ",0.0585645823327536,0.4166666666666667,0.1304347826086956,0.0454545454545454,0.0047619047619047,0.9564370512962341,0.9601439237594604,0.9582868814468384,0.959771990776062
95,Write a function to find all anagrams of a string in a given list of strings using lambda function.,"from collections import Counter 
def anagram_lambda(texts,str):
  result = list(filter(lambda x: (Counter(str) == Counter(x)), texts)) 
  return result","def str_to_list(str1):
    result = list(map(lambda x: x[0::-1], str1)) 
    return result",0.0383363700274813,0.3292869816564158,0.121958141354228,0.0068601454511753,0.0078401662299146,0.849829375743866,0.8313451409339905,0.840485692024231,0.8331573009490967
96,Write a python function to print negative numbers in a list.,"def neg_nos(list1):
  for num in list1: 
    if num < 0: 
       return num ","def neg_count(list1):
  neg_count= 0
  for num in list1: 
    if num <= 0: 
      neg_count += 1
  return neg_count ",0.3118181497809655,0.5294117647058824,0.3125,0.2666666666666666,0.2142857142857142,0.8973749279975891,0.9587168097496033,0.9270322322845459,0.9522078037261963
97,"Write a function to find eulerian number a(n, m).","def eulerian_num(n, m): 
	if (m >= n or n == 0): 
		return 0 
	if (m == 0): 
		return 1 
	return ((n - m) * eulerian_num(n - 1, m - 1) +(m + 1) * eulerian_num(n - 1, m))","def eulerian_number(n):
  if (n == 0):
    return 1
  else:
    m = n // 2
  return (m) ",0.0474103181745311,0.1422222726401699,0.0505679191609493,0.0361199422578209,0.0194491996772881,0.8882710933685303,0.8484947085380554,0.8679274320602417,0.8523113131523132
